name: Docker

on:
  push:
    # Pushing to `main` branch builds image with `:latest` tag.
    branches:
      - main

    # Pushing `v1.2.3` tags builds accordingly tagged images
    tags:
      - v*

    paths-ignore:
      - "*.md"

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        os: ['', '-alpine']

    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        id: prepare
        run: |
          FULL_IMAGE_NAME=ghcr.io/${{ github.repository }}

          ## Change all uppercase to lowercase
          FULL_IMAGE_NAME=$(echo $FULL_IMAGE_NAME | tr '[A-Z]' '[a-z]')

          ## Strip git ref prefix from tag
          TAG=$(echo "${{ github.event.ref }}" | sed -e 's,.*/\(.*\),\1,')

          ## Strip "v" prefix from tag name
          [[ "${{ github.event.ref }}" == "refs/tags/"* ]] && TAG=$(echo $TAG | sed -e 's/^v//')

          ## Use Docker `latest` tag convention
          [ "$TAG" == "main" ] && TAG=latest

          echo "::set-output name=img::${FULL_IMAGE_NAME}"
          echo "::set-output name=tag::${TAG}"

      - name: Build & push image
        ## Possible tags: latest, 1.2.3

        # latest
        # OS
        # 2.4.6
        # 2.4.6-OS

        # builder
        # builder-OS
        # 2.4.6-builder
        # 2.4.6-builder-OS
        run: |
          CADDY_VERSION="${{ steps.prepare.outputs.tag }}${{ matrix.os }}"

          [[ "${CADDY_VERSION}" == "latest-alpine" ]] && CADDY_VERSION="alpine"

          BUILDER_VERSION="${{ steps.prepare.outputs.tag }}-builder"
          [[ "${BUILDER_VERSION}" == "latest-builder" ]] && BUILDER_VERSION="builder"

          docker build \
            --file Dockerfile \
            --tag ${{ steps.prepare.outputs.img }}:${CADDY_VERSION} \
            --build-arg CADDY_VERSION=${CADDY_VERSION} \
            --build-arg BUILDER_VERSION=${BUILDER_VERSION}${{ matrix.os }} \
            .

          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          docker push ${{ steps.prepare.outputs.img }}:${CADDY_VERSION}
